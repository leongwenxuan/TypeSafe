# TypeSafe Secrets - Kubernetes
# 
# IMPORTANT: This is an EXAMPLE file. DO NOT commit actual secrets to git.
# 
# Usage:
#   1. Copy this file: cp secrets.yaml.example secrets.yaml
#   2. Replace placeholder values with actual secrets
#   3. Apply: kubectl apply -f secrets.yaml
#   4. Add secrets.yaml to .gitignore
#
# Alternative: Use sealed-secrets, external-secrets, or vault for production

apiVersion: v1
kind: Secret
metadata:
  name: typesafe-secrets
  namespace: typesafe
type: Opaque
stringData:
  # Replace with your actual API keys
  groq-api-key: "your_groq_api_key_here"
  gemini-api-key: "your_gemini_api_key_here"
  supabase-url: "https://your-project.supabase.co"
  supabase-key: "your_supabase_key_here"
  backend-api-key: "your_backend_api_key_here"

---
# Alternatively, use base64-encoded secrets:
# apiVersion: v1
# kind: Secret
# metadata:
#   name: typesafe-secrets
#   namespace: typesafe
# type: Opaque
# data:
#   groq-api-key: <base64-encoded-value>
#   gemini-api-key: <base64-encoded-value>
#   supabase-url: <base64-encoded-value>
#   supabase-key: <base64-encoded-value>
#   backend-api-key: <base64-encoded-value>
#
# To encode: echo -n "your_secret" | base64
# To decode: echo "encoded_value" | base64 -d

